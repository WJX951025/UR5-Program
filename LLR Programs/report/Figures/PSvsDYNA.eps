%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc. Version 7.7.0.471 (R2008b). Operating System: Microsoft Windows XP.
%%Title: O:\MSc Thesis\Report\Figures\PSvsDYNA.eps
%%CreationDate: 03/18/2010  16:06:18
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -182    90   778   751
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -182    90   778   751
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -2184 9012 csm

    0     0 11529  7924 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 11530 7925 rf
2.4 w
0 6458 8935 0 0 -6458 1499 7052 4 MP
PP
-8935 0 0 6458 8935 0 0 -6458 1499 7052 5 MP stroke
1.6 w
DO
SO
2.4 w
0 sg
1499  594 mt 10434  594 L
1499 7052 mt 10434 7052 L
10434 7052 mt 10434  594 L
1499 7052 mt 1499  594 L
1499 7052 mt 10434 7052 L
1499 7052 mt 1499  594 L
1499 7052 mt 1499 6962 L
1499  594 mt 1499  683 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 168 FMSR

1453 7242 mt 
(0) s
2392 7052 mt 2392 6962 L
2392  594 mt 2392  683 L
2252 7242 mt 
(100) s
3286 7052 mt 3286 6962 L
3286  594 mt 3286  683 L
3146 7242 mt 
(200) s
4179 7052 mt 4179 6962 L
4179  594 mt 4179  683 L
4039 7242 mt 
(300) s
5073 7052 mt 5073 6962 L
5073  594 mt 5073  683 L
4933 7242 mt 
(400) s
5966 7052 mt 5966 6962 L
5966  594 mt 5966  683 L
5826 7242 mt 
(500) s
6860 7052 mt 6860 6962 L
6860  594 mt 6860  683 L
6720 7242 mt 
(600) s
7753 7052 mt 7753 6962 L
7753  594 mt 7753  683 L
7613 7242 mt 
(700) s
8647 7052 mt 8647 6962 L
8647  594 mt 8647  683 L
8507 7242 mt 
(800) s
9540 7052 mt 9540 6962 L
9540  594 mt 9540  683 L
9400 7242 mt 
(900) s
10434 7052 mt 10434 6962 L
10434  594 mt 10434  683 L
10248 7242 mt 
(1000) s
1499 7052 mt 1588 7052 L
10434 7052 mt 10344 7052 L
 993 7114 mt 
(-5000) s
1499 5975 mt 1588 5975 L
10434 5975 mt 10344 5975 L
 993 6037 mt 
(-4000) s
1499 4899 mt 1588 4899 L
10434 4899 mt 10344 4899 L
 993 4961 mt 
(-3000) s
1499 3823 mt 1588 3823 L
10434 3823 mt 10344 3823 L
 993 3885 mt 
(-2000) s
1499 2746 mt 1588 2746 L
10434 2746 mt 10344 2746 L
 993 2808 mt 
(-1000) s
1499 1670 mt 1588 1670 L
10434 1670 mt 10344 1670 L
1371 1732 mt 
(0) s
1499  594 mt 1588  594 L
10434  594 mt 10344  594 L
1091  656 mt 
(1000) s
1499  594 mt 10434  594 L
1499 7052 mt 10434 7052 L
10434 7052 mt 10434  594 L
1499 7052 mt 1499  594 L
gs 1499 594 8936 6459 rc
24 w
90 -13 89 -1 90 4 89 10 89 -33 90 -32 89 33 89 -17 
90 -43 89 13 89 -15 90 0 89 24 89 -62 90 48 89 -10 
89 -9 90 -8 89 34 89 -18 90 85 89 -55 90 -9 89 28 
89 6 90 24 89 19 89 -33 90 -11 89 2 89 -29 90 17 
89 -52 89 12 90 71 89 14 89 -33 90 37 89 -24 89 22 
90 -61 89 28 90 -17 89 -33 89 48 90 -52 89 27 89 -33 
90 -31 89 -16 89 27 90 -35 89 -57 89 97 90 -18 89 -24 
89 3 90 20 89 -24 89 8 90 -32 89 -5 90 20 89 -41 
89 11 90 -17 89 35 89 -51 90 19 89 -44 89 24 90 -49 
89 52 89 -81 90 3 89 39 89 -71 90 74 89 -80 89 36 
90 -110 89 106 90 -172 89 100 89 -319 90 225 89 -90 89 -196 
90 103 89 -156 89 -175 90 8 89 -271 89 -519 90 -563 89 -325 
89 -369 90 -79 89 -517 1588 5910 100 MP stroke
DO
6 w
90 1 89 3 90 -2 89 2 89 -24 90 -8 89 -3 89 -4 
90 -11 89 -5 89 -8 90 -7 89 9 89 -47 90 46 89 0 
89 -31 90 2 89 38 89 -26 90 61 89 -48 90 22 89 13 
89 13 90 24 89 0 89 -18 90 -22 89 6 89 -41 90 34 
89 -7 89 -26 90 62 89 5 89 -35 90 40 89 -1 89 -15 
90 -18 89 2 90 -10 89 -37 89 43 90 -19 89 18 89 -33 
90 -21 89 -45 89 18 90 -43 89 -27 89 75 90 9 89 -52 
89 13 90 29 89 -26 89 8 90 -41 89 15 90 13 89 -63 
89 29 90 -26 89 30 89 -53 90 29 89 -41 89 6 90 -41 
89 50 89 -59 90 -1 89 51 89 -82 90 65 89 -57 89 5 
90 -66 89 62 90 -115 89 95 89 -302 90 172 89 -85 89 -157 
90 61 89 -133 89 -183 90 72 89 -335 89 -524 90 -467 89 -414 
89 -387 90 -66 89 -528 1588 5870 100 MP stroke
90 -28 89 -3 90 10 89 17 89 -42 90 -57 89 71 89 -31 
90 -75 89 32 89 -23 90 6 89 41 89 -78 90 50 89 -20 
89 13 90 -19 89 32 89 -12 90 110 89 -61 90 -41 89 44 
89 -2 90 25 89 38 89 -48 90 -1 89 -1 89 -18 90 1 
89 -98 89 50 90 81 89 22 89 -31 90 34 89 -46 89 59 
90 -106 89 55 90 -25 89 -28 89 54 90 -87 89 38 89 -34 
90 -41 89 13 89 35 90 -25 89 -87 89 119 90 -46 89 5 
89 -8 90 10 89 -21 89 8 90 -23 89 -25 90 27 89 -19 
89 -7 90 -8 89 41 89 -51 90 11 89 -48 89 42 90 -57 
89 53 89 -103 90 8 89 26 89 -59 90 83 89 -103 89 67 
90 -154 89 150 90 -229 89 105 89 -336 90 278 89 -94 89 -236 
90 145 89 -178 89 -168 90 -55 89 -208 89 -515 90 -658 89 -237 
89 -349 90 -93 89 -506 1588 5950 100 MP stroke
SO
24 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
90 147 89 9 90 -85 89 59 89 8 90 14 89 21 89 -168 
90 -36 89 129 89 47 90 15 89 -90 89 38 90 -67 89 52 
89 77 90 -47 89 -1 89 36 90 3 89 -45 90 45 89 -4 
89 -1 90 1 89 0 89 0 90 3 89 -1 89 2 90 0 
89 0 89 0 90 0 89 0 89 0 90 0 89 0 89 0 
90 11 89 -257 90 148 89 -33 89 82 90 -46 89 88 89 12 
90 -22 89 -81 89 -81 90 71 89 -36 89 -22 90 33 89 -6 
89 67 90 -154 89 190 89 -83 90 62 89 0 90 -336 89 89 
89 -155 90 96 89 135 89 -82 90 15 89 72 89 72 90 -88 
89 -10 89 -32 90 -199 89 258 89 17 90 -135 89 157 89 -216 
90 115 89 17 90 -35 89 -195 89 -74 90 275 89 -137 89 -241 
90 -33 89 -57 89 72 90 46 89 -392 89 -376 90 -823 89 -332 
89 -345 90 -294 89 -407 1588 5941 100 MP stroke
DO
6 w
90 147 89 9 90 -85 89 59 89 8 90 14 89 21 89 -168 
90 -36 89 129 89 47 90 15 89 -90 89 38 90 -67 89 52 
89 77 90 -47 89 -1 89 37 90 2 89 -44 90 44 89 -4 
89 -1 90 1 89 0 89 0 90 3 89 0 89 1 90 0 
89 0 89 0 90 0 89 0 89 0 90 0 89 0 89 0 
90 11 89 -257 90 148 89 -33 89 82 90 -46 89 88 89 12 
90 -22 89 -81 89 -81 90 71 89 -36 89 -22 90 33 89 -6 
89 67 90 -154 89 190 89 -83 90 62 89 1 90 -337 89 89 
89 -155 90 96 89 135 89 -82 90 16 89 71 89 72 90 -88 
89 -10 89 -32 90 -199 89 258 89 17 90 -135 89 157 89 -216 
90 115 89 17 90 -35 89 -195 89 -74 90 275 89 -137 89 -241 
90 -33 89 -57 89 72 90 46 89 -391 89 -377 90 -823 89 -332 
89 -344 90 -295 89 -407 1588 5289 100 MP stroke
90 147 89 9 90 -85 89 59 89 8 90 14 89 21 89 -168 
90 -36 89 129 89 47 90 15 89 -90 89 38 90 -67 89 52 
89 77 90 -47 89 -1 89 36 90 2 89 -44 90 44 89 -3 
89 -1 90 1 89 0 89 0 90 3 89 -1 89 2 90 0 
89 0 89 0 90 0 89 0 89 0 90 0 89 0 89 0 
90 11 89 -257 90 148 89 -33 89 82 90 -46 89 88 89 12 
90 -22 89 -81 89 -81 90 71 89 -36 89 -22 90 33 89 -6 
89 67 90 -154 89 189 89 -82 90 62 89 0 90 -336 89 89 
89 -155 90 96 89 135 89 -82 90 15 89 72 89 72 90 -88 
89 -10 89 -32 90 -199 89 258 89 17 90 -135 89 157 89 -216 
90 115 89 17 90 -35 89 -195 89 -74 90 275 89 -138 89 -240 
90 -33 89 -57 89 72 90 46 89 -392 89 -377 90 -822 89 -332 
89 -345 90 -294 89 -407 1588 6593 100 MP stroke
gr

6 w
c8
DO
0 sg
5811 7420 mt 
(Trial) s
 901 4110 mt  -90 rotate
(Reward) s
90 rotate
1476 7113 mt 
( ) s
10412  654 mt 
( ) s
SO
2.4 w
1 sg
0 444 1579 0 0 -444 8796 6994 4 MP
PP
-1579 0 0 444 1579 0 0 -444 8796 6994 5 MP stroke
1.6 w
DO
SO
2.4 w
0 sg
8796 6550 mt 10375 6550 L
8796 6994 mt 10375 6994 L
10375 6994 mt 10375 6550 L
8796 6994 mt 8796 6550 L
8796 6994 mt 10375 6994 L
8796 6994 mt 8796 6550 L
8796 6550 mt 10375 6550 L
8796 6994 mt 10375 6994 L
10375 6994 mt 10375 6550 L
8796 6994 mt 8796 6550 L
9258 6731 mt 
(Random Dyna) s
gs 8796 6550 1580 445 rc
24 w
355 0 8866 6670 2 MP stroke
gr

24 w
9258 6934 mt 
(PS) s
gs 8796 6550 1580 445 rc
c8
355 0 8866 6873 2 MP stroke
2.4 w
gr

2.4 w
c8

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
